name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      syntax_ok: ${{ steps.python_lint.outcome == 'success' && steps.ruby_lint.outcome == 'success' }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Python linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint black isort mypy
      
      - name: Check Python syntax and style
        id: python_lint
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          pylint --disable=all --enable=syntax-error,undefined-variable,unused-import,unused-variable *.py
          # Format code with black and isort instead of just checking
          black .
          isort .
          mypy --ignore-missing-imports .
          
      - name: Commit formatted code
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "Apply automatic code formatting [skip ci]"
          git push
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
      
      - name: Install Ruby linting tools
        run: |
          gem install rubocop
      
      - name: Check Ruby syntax and style
        id: ruby_lint
        run: |
          rubocop homebrew/*.rb --only Syntax,Lint
  
  test:
    needs: syntax-check
    if: needs.syntax-check.outputs.syntax_ok == 'true'
    runs-on: macos-latest
    outputs:
      tests_passed: ${{ steps.run_tests.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper checkout
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tnefparse chardet beautifulsoup4
          brew install mpack
      
      - name: List directory contents
        run: |
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "Test directory contents:"
          ls -la test/ || echo "test/ directory not found"
          echo "Scripts directory contents:"
          ls -la scripts/ || echo "scripts/ directory not found"

      - name: Run test suite
        id: run_tests
        run: |
          # Ensure the test script exists and is executable
          if [ ! -f "test/run_tests.sh" ]; then
            echo "Error: test/run_tests.sh not found"
            echo "Trying to find the file:"
            find . -name "run_tests.sh"
            exit 1
          fi
          
          chmod +x test/run_tests.sh
          ./test/run_tests.sh