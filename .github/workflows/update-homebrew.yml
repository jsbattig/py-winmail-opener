name: Update Homebrew Tap

# This workflow requires a repository secret named HOMEBREW_TAP_TOKEN
# Go to Settings > Secrets and variables > Actions > New repository secret
# Name it HOMEBREW_TAP_TOKEN and use a personal access token with repo scope
# The token needs write access to the homebrew-winmail repository

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to use (e.g., v2.0.7)'
        required: true
        type: string

jobs:
  update-homebrew-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout homebrew-winmail repository
        uses: actions/checkout@v3
        with:
          repository: jsbattig/homebrew-winmail
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-winmail
      
      - name: Set up environment variables
        run: |
          # Only workflow_dispatch events are used now
          echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          TAG_INPUT="${{ github.event.inputs.tag_name }}"
          echo "VERSION=${TAG_INPUT#v}" >> $GITHUB_ENV
          
          # Print debug information
          echo "Event name: ${{ github.event_name }}"
          echo "Tag name: ${{ env.TAG_NAME }}"
          echo "Version: ${{ env.VERSION }}"
      
      - name: Download release tarball and calculate checksum
        run: |
          curl -L https://github.com/jsbattig/py-winmail-opener/archive/refs/tags/${{ env.TAG_NAME }}.tar.gz -o release.tar.gz
          echo "SHA256=$(shasum -a 256 release.tar.gz | awk '{print $1}')" >> $GITHUB_ENV
      
      - name: Update formula
        run: |
          cd homebrew-winmail
          
          # Update URL and SHA256 - these are safe replacements
          sed -i "s|url \".*\"|url \"https://github.com/jsbattig/py-winmail-opener/archive/refs/tags/${{ env.TAG_NAME }}.tar.gz\"|" py-winmail-opener.rb
          sed -i "s|sha256 \".*\"|sha256 \"${{ env.SHA256 }}\"|" py-winmail-opener.rb
          
          # Ensure the uninstall method has the correct signature
          if grep -q "def uninstall$" py-winmail-opener.rb; then
            echo "Fixing uninstall method signature..."
            sed -i "s/def uninstall$/def uninstall(args=nil)/" py-winmail-opener.rb
          fi
          
          # First examine the formula to understand its structure
          echo "Current formula structure:"
          cat py-winmail-opener.rb
          
          # Get the current assertion line to see its full structure
          ASSERT_LINE=$(grep -n "assert_match.*winmail_opener" py-winmail-opener.rb || echo "Line not found")
          echo "Current assert_match line: ${ASSERT_LINE}"
          
          # Debug what files were modified
          echo "Files in the repository:"
          ls -la
          
          # Fix for Ruby syntax - ensure complete assert_match line structure
          # Looking at our template, the proper structure should be:
          # assert_match "winmail_opener VERSION", shell_output("#{bin}/winmail-opener --version")
          
          # Try to find the assert_match line first
          if grep -q "assert_match.*winmail_opener" py-winmail-opener.rb; then
            # Replace only the version number while keeping the full line structure intact
            sed -i "s|winmail_opener [0-9][0-9.]*|winmail_opener ${{ env.VERSION }}|" py-winmail-opener.rb
          else
            echo "WARNING: assert_match line not found. Adding proper assert_match line."
            # Add a proper assert_match line at the end of the test block if it doesn't exist
            sed -i "/test do/a\\    assert_match \"winmail_opener ${{ env.VERSION }}\", shell_output(\"\#{bin}/winmail-opener --version\")" py-winmail-opener.rb
          fi
          
          # If the assert_match line doesn't have shell_output, fix it
          if grep -q "assert_match \"winmail_opener.*\")" py-winmail-opener.rb; then
            echo "Fixing incomplete assert_match line"
            sed -i "s|assert_match \"winmail_opener.*\")|assert_match \"winmail_opener ${{ env.VERSION }}\", shell_output(\"\#{bin}/winmail-opener --version\")|" py-winmail-opener.rb
          fi
          
          echo "Updated formula:"
          cat py-winmail-opener.rb
          
          # Check if the formula is valid Ruby
          ruby -c py-winmail-opener.rb || {
            echo "Error: Formula has syntax errors after update"
            echo "Reverting changes to prevent breaking the formula"
            git checkout -- py-winmail-opener.rb
            exit 1
          }
      
      - name: Commit and push changes
        run: |
          cd homebrew-winmail
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add py-winmail-opener.rb
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit - formula is already up to date"
          else
            git commit -m "Update formula for py-winmail-opener ${{ env.TAG_NAME }}"
            
            # Try to push with error handling
            git push || {
              echo "Push failed. Fetching latest changes and trying again..."
              git fetch
              git rebase origin/master
              git push
            }
          fi
          
      - name: Verify Formula Update
        run: |
          cd homebrew-winmail
          # Check if the formula has the correct version
          if grep -q "assert_match \"winmail_opener ${{ env.VERSION }}\"" py-winmail-opener.rb; then
            echo "Formula successfully updated to version ${{ env.VERSION }}"
          else
            echo "Warning: Formula version may not have been updated correctly"
            echo "Current formula content:"
            cat py-winmail-opener.rb
          fi
