#!/bin/bash
# Get the directory containing this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
RESOURCES="$DIR/../Resources"
PYTHON="$RESOURCES/python/bin/python3"

# Log file for debugging
LOG_FILE=~/Library/Logs/WinmailOpener_log.txt

# Log this execution
echo "========================================" >> "$LOG_FILE"
echo "WinmailOpener launched at $(date)" >> "$LOG_FILE"
echo "Current directory: $(pwd)" >> "$LOG_FILE"
echo "Arguments received: $@" >> "$LOG_FILE"

# Check if we have arguments from command line
if [ $# -gt 0 ]; then
    # Process files passed directly
    for file in "$@"; do
        echo "Processing file from command line: $file" >> "$LOG_FILE"
        "$PYTHON" "$RESOURCES/winmail_opener.py" "$file" 2>&1 | tee -a "$LOG_FILE"
    done
else
    # Check if we're being opened with a document via Open/Documents Apple event
    # This approach uses a temp file to handle files dropped on the app icon
    DROPPED_FILES="$HOME/Library/Logs/WinmailOpener_dropped_files.txt"
    
    # Get the most recently modified .dat files in the Downloads folder from the last 30 seconds
    # This is a heuristic to handle files that were just downloaded or received in email
    echo "Checking for recently modified .dat files..." >> "$LOG_FILE"
    FOUND_FILES=$(find ~/Downloads -name "*.dat" -mtime -30s 2>/dev/null)
    
    if [ -n "$FOUND_FILES" ]; then
        echo "Found recently modified .dat files:" >> "$LOG_FILE"
        echo "$FOUND_FILES" >> "$LOG_FILE"
        
        # Process each found file
        while IFS= read -r file; do
            if [ -f "$file" ]; then
                echo "Processing recent file: $file" >> "$LOG_FILE"
                "$PYTHON" "$RESOURCES/winmail_opener.py" "$file" 2>&1 | tee -a "$LOG_FILE"
                osascript -e "display notification "Processed $file" with title "WinmailOpener""
            fi
        done <<< "$FOUND_FILES"
    else
        # If no files found, show the dialog
        echo "No arguments and no recent .dat files found, showing dialog" >> "$LOG_FILE"
        osascript -e 'display dialog "Please double-click a winmail.dat file instead of launching this app directly." buttons {"OK"} default button "OK" with title "WinmailOpener"'
    fi
fi
